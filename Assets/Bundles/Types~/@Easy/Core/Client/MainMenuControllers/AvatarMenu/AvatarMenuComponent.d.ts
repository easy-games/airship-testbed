import { MainMenuController } from "../MainMenuController";
import MainMenuPageComponent from "../MainMenuPageComponent";
import { MainMenuPageType } from "../MainMenuPageName";
export default class AvatarMenuComponent extends MainMenuPageComponent {
    private readonly generalHookupKey;
    private readonly tweenDuration;
    itemButtonTemplate?: GameObject;
    canvas?: Canvas;
    mainCanvasGroup: CanvasGroup;
    avatarRenderHolder?: GameObject;
    avatarCenterRect?: RectTransform;
    categoryLabelTxt?: TextMeshProUGUI;
    mainContentHolder?: Transform;
    avatarProfileMenuGo?: GameObject;
    avatarToolbar: RectTransform;
    avatarOptionsHolder: RectTransform;
    avatar3DHolder: RectTransform;
    outfitButtonHolder: Transform;
    mainNavButtonHolder: Transform;
    private outfitBtns;
    private mainNavBtns;
    private activeMainIndex;
    private activeSubIndex;
    private activeAccessories;
    private outfits?;
    private currentUserOutfit?;
    private currentUserOutfitIndex;
    private currentContentBtns;
    private clientId;
    private selectedAccessories;
    private selectedColor;
    private selectedFaceId;
    private bin;
    private mouse;
    private saveBtn?;
    private currentFocusedSlot;
    private avatarProfileMenu?;
    private Log;
    Init(mainMenu: MainMenuController, pageType: MainMenuPageType): void;
    private RefreshAvatar;
    OpenPage(params?: unknown): void;
    ClosePage(instant?: boolean): void;
    private SelectMainNav;
    private SelectSubNav;
    private DisplayItemsOfType;
    private DisplayItems;
    private DisplayFaceItems;
    private itemButtonBin;
    private ClearItembuttons;
    private DisplayColorScheme;
    private DisplaySkinTextures;
    private AddColorButton;
    private AddItemButton;
    private SelectItem;
    private SelectFaceItem;
    private SelectSkinItem;
    private SelectSkinColor;
    private RemoveItem;
    private OnDragAvatar;
    private InitializeAutherizedAccessories;
    private LoadAllOutfits;
    private SelectOutfit;
    private ClearAllAccessories;
    private LoadCurrentOutfit;
    private UpdateButtonGraphics;
    private Save;
    private Revert;
    private thumbnailRenderList;
    private thumbnailFaceRenderList;
    private inThumbnailMode;
    private renderSetup?;
}
