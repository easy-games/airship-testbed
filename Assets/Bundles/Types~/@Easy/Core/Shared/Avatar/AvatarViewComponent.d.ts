/// <reference types="compiler-types" />
import AvatarRenderComponent from "../../Client/ProtectedControllers/AvatarMenu/AvatarRenderComponent";
export default class AvatarViewComponent extends AirshipBehaviour {
    avatarRenderTemplate?: GameObject;
    humanEntityGo?: GameObject;
    avatarHolder?: Transform;
    anim?: CharacterAnimationHelper;
    accessoryBuilder?: AccessoryBuilder;
    cameraRigTransform?: Transform;
    avatarCamera?: Camera;
    backdropHolder?: GameObject;
    cameraWaypointDefault?: Transform;
    cameraWaypointHead?: Transform;
    cameraWaypointFeet?: Transform;
    cameraWaypointHands?: Transform;
    cameraWaypointBack?: Transform;
    cameraWaypointCenterHero?: Transform;
    cameraWaypointBirdsEye?: Transform;
    dragSpeedMod: number;
    freeSpinDrag: number;
    cameraTransitionDuration: number;
    screenspaceDistance: number;
    alignmentOffsetWorldpsace: Vector3;
    idleAnim: AnimationClip;
    spinAnimLoop: AnimationClip;
    spinAnimStop: AnimationClip;
    spinBigRequiredTime: number;
    spinBigRequiredSpeed: number;
    dragging: boolean;
    private targetTransform?;
    private mouse?;
    private lastMousePos;
    private initialized;
    private spinVel;
    private renderTexture?;
    private lastScreenRefreshTime;
    private screenRefreshCooldown;
    private screenSizeIsDirty;
    private spinBigStartTime;
    private spinningBig;
    private spinAnimationTriggered;
    private freeSpinning;
    private bin;
    Awake(): void;
    Start(): void;
    OnEnable(): void;
    private UpdateSpinAnimation;
    OnDisable(): void;
    FixedUpdate(dt: number): void;
    private CreateRenderTexture;
    private onNewRenderTexture;
    OnNewRenderTexture(callback: (texture: RenderTexture) => void): void;
    ShowAvatar(): void;
    HideAvatar(): void;
    ResetAvatar(): void;
    AlignCamera(screenPos: Vector3): void;
    CameraFocusSlot(slotType: AccessorySlot): void;
    GetFocusTransform(slotType: AccessorySlot): Transform | undefined;
    CameraFocusTransform(transform?: Transform, instant?: boolean): void;
    CreateRenderScene(): AvatarRenderComponent | undefined;
}
